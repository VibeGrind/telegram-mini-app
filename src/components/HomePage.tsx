import { useState } from 'react'
import {
  List,
  Section,
  Cell,
  Button,
  Avatar,
  Title,
  Text,
  Caption,
  Badge,
  Modal,
  Input,
  Switch,
  Placeholder,
} from '@telegram-apps/telegram-ui'

export default function HomePage() {
  const [isModalOpen, setIsModalOpen] = useState(false)
  const [notifications, setNotifications] = useState(true)
  const [username, setUsername] = useState('')

  const handleShowAlert = () => {
    alert('–ü—Ä–∏–≤–µ—Ç –∏–∑ Telegram Mini App! üëã')
  }

  const user = window.Telegram?.WebApp?.initDataUnsafe?.user

  return (
    <List>
      {/* Welcome Section */}
      <Section>
        <Cell
          before={
            <Avatar
              size={48}
              acronym={user?.first_name?.[0] || 'U'}
            />
          }
          multiline
        >
          <Title level="2">
            {user?.first_name || '–ü—Ä–∏–≤–µ—Ç'} {user?.last_name || ''}
          </Title>
          <Text>
            {user?.username ? `@${user.username}` : '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!'}
          </Text>
          <Caption level="1">Telegram Mini App Demo</Caption>
        </Cell>
      </Section>

      {/* Info Section */}
      <Section header="–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏" footer="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Telegram UI">
        <Cell>
          <Placeholder
            header="–ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!"
            description="–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Telegram UI"
          >
            <div style={{ fontSize: 64 }}>üöÄ</div>
          </Placeholder>
        </Cell>
      </Section>

      {/* Actions Section */}
      <Section header="–î–µ–π—Å—Ç–≤–∏—è">
        <Cell
          subtitle="–ü–æ–∫–∞–∂–µ—Ç –Ω–∞—Ç–∏–≤–Ω—ã–π –∞–ª–µ—Ä—Ç"
          after={<Badge type="dot" mode="primary" />}
        >
          <Button
            mode="plain"
            stretched
            onClick={handleShowAlert}
          >
            –ü–æ–∫–∞–∑–∞—Ç—å Alert
          </Button>
        </Cell>

        <Cell subtitle="–û—Ç–∫—Ä–æ–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ">
          <Button
            mode="plain"
            stretched
            onClick={() => setIsModalOpen(true)}
          >
            –û—Ç–∫—Ä—ã—Ç—å Modal
          </Button>
        </Cell>
      </Section>

      {/* Settings Section */}
      <Section header="–ù–∞—Å—Ç—Ä–æ–π–∫–∏">
        <Cell
          Component="label"
          after={
            <Switch
              checked={notifications}
              onChange={(e) => setNotifications(e.target.checked)}
            />
          }
        >
          –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        </Cell>

        <Cell>
          <Input
            header="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
          />
        </Cell>
      </Section>

      {/* Example Buttons */}
      <Section>
        <Button mode="filled" stretched>
          –ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞
        </Button>
        <Button mode="bezeled" stretched>
          –û–±–≤–µ–¥—ë–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞
        </Button>
        <Button mode="plain" stretched>
          –ü—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞
        </Button>
      </Section>

      {/* Modal Dialog */}
      <Modal
        open={isModalOpen}
        onOpenChange={setIsModalOpen}
        header={<Modal.Header>–ü—Ä–∏–º–µ—Ä Modal</Modal.Header>}
      >
        <div style={{ padding: 20 }}>
          <Title level="3" style={{ marginBottom: 12 }}>
            –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
          </Title>
          <Text style={{ marginBottom: 20 }}>
            –≠—Ç–æ –ø—Ä–∏–º–µ—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Telegram UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
          </Text>

          <div style={{ display: 'flex', gap: 8 }}>
            <Button
              mode="filled"
              stretched
              onClick={() => setIsModalOpen(false)}
            >
              –ü–æ–Ω—è—Ç–Ω–æ
            </Button>
            <Modal.Close>
              <Button mode="bezeled" stretched>
                –ó–∞–∫—Ä—ã—Ç—å
              </Button>
            </Modal.Close>
          </div>
        </div>
      </Modal>
    </List>
  )
}
